{
  "hash": "65b4e6adf9a244260270d78796e3b462",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"SOD assay for nickel LC50 samples\"\nauthor: \"Celeste Valdivia\"\ndate: \"2024-07-03\"\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(knitr)\nlibrary(tidyverse)\nlibrary(tidyr)\nlibrary(dplyr)\nlibrary(hrbrthemes)\nlibrary(ggplot2)\nlibrary(car)\nlibrary(RColorBrewer)\nlibrary(ggpubr)\nknitr::opts_chunk$set(echo = TRUE,\n                      eval = TRUE)\n```\n:::\n\n\n# Retrieving Data from Google Sheets\n\nMake sure you have made your Google sheet publicly available to anyone that has the link. If you make any updates to the sheet just re-curl the data, meaning just re-run the code below.\n\nI apologize for not making a relative path. Just modify what is after \"tee\" to your own directory path.\n\n\n::: {.cell}\n\n```{.bash .cell-code}\ncurl -L https://docs.google.com/spreadsheets/d/1vNxX2tBdEa0Ibyd4mFdru5sAZx0aipv37-y-hkqvJq4/export?exportFormat=csv | tee /Users/valeste/Documents/Git/tough-tunicates/posts/LC50-SOD/SOD.csv\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsod <- read.csv(\"SOD.csv\")\nhead(sod)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  well_content tech_rep hom_num date_assay treatment hpe sod_calc\n1 Hom 1 1:3 R1       R1       1     7/2/24         0  24 2.305306\n2 Hom 1 1:3 R2       R2       1     7/2/24         0  24 2.179302\n3 Hom 2 1:3 R1       R1       2     7/2/24         0  24 4.959112\n4 Hom 2 1:3 R2       R2       2     7/2/24         0  24 3.800808\n5 Hom 3 1:3 R1       R1       3     7/2/24         0  24 3.495769\n6 Hom 3 1:3 R2       R2       3     7/2/24         0  24 1.962912\n```\n\n\n:::\n:::\n\n\n# Work Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_clean <- sod %>%\n  filter(!is.na(sod_calc))\n```\n:::\n\n\n\nAverage the technical replicates\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_avg <- df_clean %>%\n  group_by(hom_num, treatment, hpe) %>%\n  summarize(\n    sod_avg = mean(sod_calc, na.rm = TRUE),\n    sod_se = sd(sod_calc, na.rm = TRUE) / sqrt(n())\n  )\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`summarise()` has grouped output by 'hom_num', 'treatment'. You can override\nusing the `.groups` argument.\n```\n\n\n:::\n:::\n\n\n# Exploratory Plots\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(df_avg, aes(x = factor(treatment), y = sod_avg, fill = factor(treatment))) +\n  geom_violin(trim = FALSE) +\n  facet_wrap(~ hpe, scales = \"free_y\") +\n  labs(title = \"Violin Plot of SOD Activity by Treatment and HPE\",\n       x = \"Treatment\",\n       y = \"SOD Activity\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(df_avg, aes(x = factor(treatment), y = sod_avg, fill = factor(treatment))) +\n  geom_bar(stat = \"identity\", position = position_dodge()) +\n  geom_errorbar(aes(ymin = sod_avg - sod_se, ymax = sod_avg + sod_se), width = 0.2, position = position_dodge(0.9)) +\n  facet_wrap(~ hpe, ncol = 1) +\n  labs(title = \"SOD Activity by Treatment and HPE\",\n       x = \"Treatment\",\n       y = \"Average SOD Activity (with SE)\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\nNote that we have yet to complete the BCA assay for these samples and so the above figures may change.\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}